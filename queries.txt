SELECT roomNumber, bedNumber FROM Room WHERE reserveStatus IS FALSE;
SELECT COUNT(*) FROM (SELECT * FROM Room WHERE reserveStatus IS FALSE AND bedNumber = 1 AND floorLocation = 1) AS available;
SELECT SUM(bedNumber) AS Customers FROM Room WHERE reserveStatus IS TRUE;	
SELECT AVG(age) FROM USER WHERE uID IN
	(SELECT uID FROM Booking WHERE checkOutDate > CURDATE());
SELECT MAX(age) FROM USER WHERE uID IN
	(SELECT uID FROM Booking WHERE checkOutDate > CURDATE());	
SELECT MIN(age) FROM USER WHERE uID IN
	(SELECT uID FROM Booking WHERE checkOutDate > CURDATE());	
SELECT AVG(dailyPrice) FROM Prices WHERE roomNumber IN (SELECT roomNumber FROM Room WHERE floorLocation = 1);
SELECT COUNT(*) AS COUNT FROM Room WHERE floorLocation = 1;
SELECT COUNT(*) FROM (SELECT * FROM Room WHERE reserveStatus IS FALSE) AS available;
DELETE FROM Booking WHERE uID IN (SELECT uID FROM USER WHERE age < 30) AND checkInDate > "2019-08-01";
SELECT roomNumber, penaltyFee FROM Prices WHERE roomNumber IN (SELECT roomNumber FROM Room WHERE floorLocation = 1);
SELECT (SELECT dailyPrice FROM Prices WHERE roomNumber = 101) * 10;	
SELECT (SELECT dailyPrice FROM Prices WHERE roomNumber = 102) * 8 + (SELECT penaltyFee FROM Prices WHERE roomNumber = 102);	
SELECT roomNumber FROM Room WHERE bedNumber > 1;
SELECT COUNT(*) FROM Room WHERE bedNumber = 1 AND reserveStatus IS TRUE;
SELECT roomNumber FROM Room GROUP BY roomNumber HAVING COUNT(*) >= 1;
UPDATE Booking SET checkOutDate = date_add(checkOutDate, interval 1 day) WHERE roomNumber >= 200
		AND uID IN (SELECT uID FROM USER WHERE age < 30);
SELECT uNAME FROM USER WHERE uID IN (SELECT uID FROM Booking WHERE roomNumber < 200)
	UNION
	SELECT uNAME FROM USER WHERE uID IN (SELECT uID FROM Booking WHERE roomNumber >= 200 AND roomNumber < 300) ORDER BY uNAME;
SELECT * FROM USER RIGHT OUTER JOIN Booking ON age > 30 AND Booking.uID = USER.uID;
